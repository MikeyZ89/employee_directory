{"version":3,"sources":["components/Navbar.js","components/Table.js","API/API.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","type","placeholder","aria-label","name","onChange","handleInputChange","value","search","Table","varient","src","photo","alt","email","phone","location","dob","axios","get","Footer","Container","fluid","Row","Col","md","sm","sortType","up","class","fn","a","b","localeCompare","down","default","App","state","results","currentSort","sortIcon","width","height","viewBox","fill","xmlns","fillRule","d","onSortChange","nextSort","setState","event","target","toLowerCase","API","then","res","data","map","result","first","last","searchName","id","registered","date","picture","medium","city","moment","format","newData","catch","error","console","log","this","length","scope","onClick","sort","filter","employee","includes","key","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.deb940d6.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark text-white text-left\">\n            <div className=\"navbar-brand\">\n                <h1>Employee Directory</h1>\n                <h6>Use the search by employee input field or the sort button next to the name field to narrow your search</h6>\n                </div>\n            <form className=\"form-inline\">\n                <input\n                    className=\"form-control mr-sm-4\"\n                    type=\"search\"\n                    placeholder=\"Search by Employee\"\n                    aria-label=\"Search\"\n                    name=\"search\"\n                    onChange={props.handleInputChange}\n                    value={props.search}\n                />\n            </form>\n        </nav>\n    );\n}","import React from \"react\";\n\nexport default function Table(props) {\n    return (\n        <tr varient=\"dark\" className=\"text-center h4\">\n            <td>\n                <img src={props.photo} alt=\"employee\" />\n            </td>\n            <td>{props.name}</td>\n            <td>{props.email}</td>\n            <td>{props.phone}</td>\n            <td>{props.location}</td>\n            <td>{props.dob}</td>\n        </tr>\n    );\n}","import axios from \"axios\";\n\nexport default {\n  search: function() {\n    return axios.get(\"https://randomuser.me/api?nat=us&results=50\");\n  }\n};","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Footer() {\n\n    return(\n        <footer className=\"mt-5\"> \n            <Container fluid={true}>\n                <Row className=\"border-top justify-content-between p-3\">\n                    <Col className=\"p-0\" md={3} sm={12}>\n                        <h3>Mike Zlotkowski</h3>\n                        <h6>GitHub: MikeyZ89</h6>\n                    </Col>\n                    <Col className=\"p-0 d-flex justify-content-end\" md={5}>\n                        <h6>Employee Directory -2020 All Rights Reserved<br></br>University of Arizona Coding BootCamp</h6>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n        \n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport API from \"./API/API\";\nimport moment from \"moment\";\nimport \"./App.css\";\n\nimport Footer from './components/Footer'\n\nconst sortType = {\n  up: {\n    class: \"sortup\",\n    fn: (a, b) => a.name.localeCompare(b.name),\n  },\n  down: {\n    class: \"sortdown\",\n    fn: (a, b) => b.name.localeCompare(a.name),\n  },\n  default: {\n    class: \"sort\",\n    fn: (a, b) => a,\n  },\n};\n\nexport default class App extends React.Component {\n  state = {\n    results: [],\n    search: \"\",\n    currentSort: \"up\",\n    sortIcon: <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-sort-alpha-up-alt\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" d=\"M4 14a.5.5 0 0 0 .5-.5v-11a.5.5 0 0 0-1 0v11a.5.5 0 0 0 .5.5z\" />\n      <path fillRule=\"evenodd\" d=\"M6.354 4.854a.5.5 0 0 0 0-.708l-2-2a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L4 3.207l1.646 1.647a.5.5 0 0 0 .708 0z\" />\n      <path d=\"M9.027 7h3.934v-.867h-2.645v-.055l2.567-3.719v-.691H9.098v.867h2.507v.055L9.027 6.309V7zm.637 7l.418-1.371h1.781L12.281 14h1.121l-1.78-5.332h-1.235L8.597 14h1.067zM11 9.687l.652 2.157h-1.351l.652-2.156H11z\" />\n    </svg>\n  };\n\n  componentDidMount() {\n    API.search()\n      .then((res) =>\n        res.data.results.map((result) => ({\n          name: `${result.name.first} ${result.name.last}`,\n          searchName: `${result.name.first}${result.name.last}`,\n          id: result.registered.date,\n          photo: result.picture.medium,\n          email: result.email,\n          phone: result.phone,\n          location: result.location.city,\n          dob: moment(result.dob.date).format(\"MM/DD/YYYY\"),\n        }))\n      )\n      .then((newData) => this.setState({ results: newData }))\n      .catch((error) => console.log(error));\n  }\n\n  onSortChange = () => {\n    const { currentSort } = this.state;\n    let nextSort;\n    let sortIcon;\n\n    if (currentSort === \"up\") {\n      nextSort = \"down\";\n      sortIcon = (\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          className=\"bi bi-sort-alpha-down-alt\"\n          fill=\"currentColor\"\n          // xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M4 2a.5.5 0 0 1 .5.5v11a.5.5 0 0 1-1 0v-11A.5.5 0 0 1 4 2z\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            d=\"M6.354 11.146a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 0 1 .708-.708L4 12.793l1.646-1.647a.5.5 0 0 1 .708 0z\"\n          />\n          <path d=\"M9.027 7h3.934v-.867h-2.645v-.055l2.567-3.719v-.691H9.098v.867h2.507v.055L9.027 6.309V7zm.637 7l.418-1.371h1.781L12.281 14h1.121l-1.78-5.332h-1.235L8.597 14h1.067zM11 9.687l.652 2.157h-1.351l.652-2.156H11z\" />\n        </svg>\n      );\n    } else if (currentSort === \"down\") {\n      nextSort = \"up\";\n      sortIcon = (\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          className=\"bi bi-sort-alpha-up-alt\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M4 14a.5.5 0 0 0 .5-.5v-11a.5.5 0 0 0-1 0v11a.5.5 0 0 0 .5.5z\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            d=\"M6.354 4.854a.5.5 0 0 0 0-.708l-2-2a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L4 3.207l1.646 1.647a.5.5 0 0 0 .708 0z\"\n          />\n          <path d=\"M9.027 7h3.934v-.867h-2.645v-.055l2.567-3.719v-.691H9.098v.867h2.507v.055L9.027 6.309V7zm.637 7l.418-1.371h1.781L12.281 14h1.121l-1.78-5.332h-1.235L8.597 14h1.067zM11 9.687l.652 2.157h-1.351l.652-2.156H11z\" />\n        </svg>\n      );\n    }\n\n    this.setState({\n      currentSort: nextSort,\n      sortIcon,\n    });\n  };\n\n  handleInputChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value.toLowerCase(),\n    });\n  };\n\n  render() {\n    const data = this.state.results;\n    const { currentSort } = this.state;\n\n    return (\n      data.length > 0 && (\n        <div>\n          <Navbar\n            handleInputChange={this.handleInputChange}\n            search={this.state.search}\n          />\n          <div className=\"jumbotron bg-transparent jumbotron-responsive\">\n            <table className=\"table table-striped table-light\">\n              <thead className=\"thead-dark text-center\">\n                <tr>\n                  <th scope=\"col\" className=\"h2\">Photo</th>\n                  <th scope=\"col\" className=\"h2\">\n                    Name\n                    <button onClick={this.onSortChange} className=\"ml-4\">\n                      {this.state.sortIcon}\n                    </button>\n                  </th>\n                  <th scope=\"col\" className=\"h2\">Email</th>\n                  <th scope=\"col\" className=\"h2\">Phone</th>\n                  <th scope=\"col\" className=\"h2\">Location</th>\n                  <th scope=\"col\" className=\"h2\">Birthday</th>\n                </tr>\n              </thead>\n              <tbody>\n                {[...data].sort(sortType[currentSort].fn).filter((employee) =>\n                    employee.name.toLowerCase().includes(this.state.search))\n                    .map((employee) => (\n                    <Table\n                      key={employee.name}\n                      photo={employee.photo}\n                      name={employee.name}\n                      email={employee.email}\n                      location={employee.location}\n                      phone={employee.phone}\n                      dob={employee.dob}\n                    />\n                  ))}\n              </tbody>\n            </table>\n          </div>\n          <Footer />\n        </div>\n      )\n    );\n  }\n}\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}